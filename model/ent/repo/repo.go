// Code generated by entc, DO NOT EDIT.

package repo

import (
	"time"
)

const (
	// Label holds the string label denoting the repo type in the database.
	Label = "repo"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNamespace holds the string denoting the namespace field in the database.
	FieldNamespace = "namespace"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldConfigPath holds the string denoting the config_path field in the database.
	FieldConfigPath = "config_path"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// FieldWebhookID holds the string denoting the webhook_id field in the database.
	FieldWebhookID = "webhook_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldLatestDeployedAt holds the string denoting the latest_deployed_at field in the database.
	FieldLatestDeployedAt = "latest_deployed_at"
	// FieldOwnerID holds the string denoting the owner_id field in the database.
	FieldOwnerID = "owner_id"
	// EdgePerms holds the string denoting the perms edge name in mutations.
	EdgePerms = "perms"
	// EdgeDeployments holds the string denoting the deployments edge name in mutations.
	EdgeDeployments = "deployments"
	// EdgeDeploymentStatuses holds the string denoting the deployment_statuses edge name in mutations.
	EdgeDeploymentStatuses = "deployment_statuses"
	// EdgeLocks holds the string denoting the locks edge name in mutations.
	EdgeLocks = "locks"
	// EdgeDeploymentStatistics holds the string denoting the deployment_statistics edge name in mutations.
	EdgeDeploymentStatistics = "deployment_statistics"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the repo in the database.
	Table = "repos"
	// PermsTable is the table that holds the perms relation/edge.
	PermsTable = "perms"
	// PermsInverseTable is the table name for the Perm entity.
	// It exists in this package in order to avoid circular dependency with the "perm" package.
	PermsInverseTable = "perms"
	// PermsColumn is the table column denoting the perms relation/edge.
	PermsColumn = "repo_id"
	// DeploymentsTable is the table that holds the deployments relation/edge.
	DeploymentsTable = "deployments"
	// DeploymentsInverseTable is the table name for the Deployment entity.
	// It exists in this package in order to avoid circular dependency with the "deployment" package.
	DeploymentsInverseTable = "deployments"
	// DeploymentsColumn is the table column denoting the deployments relation/edge.
	DeploymentsColumn = "repo_id"
	// DeploymentStatusesTable is the table that holds the deployment_statuses relation/edge.
	DeploymentStatusesTable = "deployment_status"
	// DeploymentStatusesInverseTable is the table name for the DeploymentStatus entity.
	// It exists in this package in order to avoid circular dependency with the "deploymentstatus" package.
	DeploymentStatusesInverseTable = "deployment_status"
	// DeploymentStatusesColumn is the table column denoting the deployment_statuses relation/edge.
	DeploymentStatusesColumn = "repo_id"
	// LocksTable is the table that holds the locks relation/edge.
	LocksTable = "locks"
	// LocksInverseTable is the table name for the Lock entity.
	// It exists in this package in order to avoid circular dependency with the "lock" package.
	LocksInverseTable = "locks"
	// LocksColumn is the table column denoting the locks relation/edge.
	LocksColumn = "repo_id"
	// DeploymentStatisticsTable is the table that holds the deployment_statistics relation/edge.
	DeploymentStatisticsTable = "deployment_statistics"
	// DeploymentStatisticsInverseTable is the table name for the DeploymentStatistics entity.
	// It exists in this package in order to avoid circular dependency with the "deploymentstatistics" package.
	DeploymentStatisticsInverseTable = "deployment_statistics"
	// DeploymentStatisticsColumn is the table column denoting the deployment_statistics relation/edge.
	DeploymentStatisticsColumn = "repo_id"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "repos"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "owner_id"
)

// Columns holds all SQL columns for repo fields.
var Columns = []string{
	FieldID,
	FieldNamespace,
	FieldName,
	FieldDescription,
	FieldConfigPath,
	FieldActive,
	FieldWebhookID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldLatestDeployedAt,
	FieldOwnerID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultConfigPath holds the default value on creation for the "config_path" field.
	DefaultConfigPath string
	// DefaultActive holds the default value on creation for the "active" field.
	DefaultActive bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultLatestDeployedAt holds the default value on creation for the "latest_deployed_at" field.
	DefaultLatestDeployedAt func() time.Time
)
