name: deploy-to-cloud

on:
  deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - 
        uses: chrnorm/deployment-status@releases/v1
        with:
          deployment_id: ${{ github.event.deployment.id }}
          description: Trigger the pipeline
          state: "queued"
          token: "${{ github.token }}"
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        uses: chrnorm/deployment-status@releases/v1
        with:
          deployment_id: ${{ github.event.deployment.id }}
          description: Start to deploy to the Kubernetes
          state: "in_progress"
          token: "${{ github.token }}"
      - 
        name: Deploy Dev
        uses: WyriHaximus/github-action-helm3@v2
        if: ${{ github.event.deployment.environment == 'dev' }}
        with:
          # Upgrade to the version.
          exec: >
            helm repo add gitployio https://gitploy-io.github.io/helm-chart/;
            helm upgrade gitploy-dev gitployio/gitploy 
            --install
            --atomic 
            --namespace=gitploy
            -f release/values.dev.yaml 
            --set=image.tag=${GITHUB_REF#refs/tags/v}
            --set=image.pullPolicy=${{ github.event.deployment.payload.pullPolicy }}
            --description="Upgrade to ${GITHUB_REF#refs/tags/}"
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - 
        name: Deploy Production
        uses: WyriHaximus/github-action-helm3@v2
        if: ${{ github.event.deployment.environment == 'production' }}
        with:
          # Upgrade to the version.
          exec: >
            helm repo add gitployio https://gitploy-io.github.io/helm-chart/;
            helm upgrade gitploy-prod gitployio/gitploy 
            --install
            --atomic 
            --namespace=gitploy
            -f release/values.production.yaml 
            --set=image.tag=${GITHUB_REF#refs/tags/v}
            --set=image.pullPolicy=${{ github.event.deployment.payload.pullPolicy }}
            --description="Upgrade to ${GITHUB_REF#refs/tags/}"
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - 
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          deployment_id: ${{ github.event.deployment.id }}
          description: Finish to deploy successfully.
          state: "success"
          token: "${{ github.token }}"
      - 
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          deployment_id: ${{ github.event.deployment.id }}
          description: Failed to deploy.
          state: "failure"
          token: "${{ github.token }}"
    