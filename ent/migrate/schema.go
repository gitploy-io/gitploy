// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DeploymentsColumns holds the columns for the "deployments" table.
	DeploymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uid", Type: field.TypeInt64, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"commit", "branch", "tag"}, Default: "commit"},
		{Name: "ref", Type: field.TypeString},
		{Name: "sha", Type: field.TypeString, Nullable: true},
		{Name: "env", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"waiting", "created", "running", "success", "failure"}, Default: "waiting"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "repo_deployments", Type: field.TypeString, Nullable: true},
		{Name: "user_deployments", Type: field.TypeString, Nullable: true},
	}
	// DeploymentsTable holds the schema information for the "deployments" table.
	DeploymentsTable = &schema.Table{
		Name:       "deployments",
		Columns:    DeploymentsColumns,
		PrimaryKey: []*schema.Column{DeploymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "deployments_repos_deployments",
				Columns:    []*schema.Column{DeploymentsColumns[9]},
				RefColumns: []*schema.Column{ReposColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "deployments_users_deployments",
				Columns:    []*schema.Column{DeploymentsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deployment_env_created_at",
				Unique:  false,
				Columns: []*schema.Column{DeploymentsColumns[5], DeploymentsColumns[7]},
			},
			{
				Name:    "deployment_created_at",
				Unique:  false,
				Columns: []*schema.Column{DeploymentsColumns[7]},
			},
		},
	}
	// PermsColumns holds the columns for the "perms" table.
	PermsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "repo_perm", Type: field.TypeEnum, Enums: []string{"read", "write", "admin"}, Default: "read"},
		{Name: "synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "repo_perms", Type: field.TypeString, Nullable: true},
		{Name: "user_perms", Type: field.TypeString, Nullable: true},
	}
	// PermsTable holds the schema information for the "perms" table.
	PermsTable = &schema.Table{
		Name:       "perms",
		Columns:    PermsColumns,
		PrimaryKey: []*schema.Column{PermsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "perms_repos_perms",
				Columns:    []*schema.Column{PermsColumns[5]},
				RefColumns: []*schema.Column{ReposColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "perms_users_perms",
				Columns:    []*schema.Column{PermsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ReposColumns holds the columns for the "repos" table.
	ReposColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "namespace", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "config_path", Type: field.TypeString, Default: "deploy.yml"},
		{Name: "synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ReposTable holds the schema information for the "repos" table.
	ReposTable = &schema.Table{
		Name:        "repos",
		Columns:     ReposColumns,
		PrimaryKey:  []*schema.Column{ReposColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "login", Type: field.TypeString, Unique: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "admin", Type: field.TypeBool, Default: false},
		{Name: "token", Type: field.TypeString},
		{Name: "refresh", Type: field.TypeString},
		{Name: "expiry", Type: field.TypeTime},
		{Name: "hash", Type: field.TypeString, Unique: true},
		{Name: "synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DeploymentsTable,
		PermsTable,
		ReposTable,
		UsersTable,
	}
)

func init() {
	DeploymentsTable.ForeignKeys[0].RefTable = ReposTable
	DeploymentsTable.ForeignKeys[1].RefTable = UsersTable
	PermsTable.ForeignKeys[0].RefTable = ReposTable
	PermsTable.ForeignKeys[1].RefTable = UsersTable
}
